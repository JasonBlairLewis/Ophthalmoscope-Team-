//
//  NewPatientViewController.swift
//  Ophthalmasocope App
//
//  Created by Jason Lewis on 9/9/17.
//  Copyright © 2017 Jason Lewis. All rights reserved.
//

import UIKit
import os.log

class NewPatientViewController: UIViewController, UITextFieldDelegate, UINavigationControllerDelegate {
    
    
    @IBOutlet weak var nameField: UITextField!
    @IBOutlet weak var emailField: UITextField!
    @IBOutlet weak var phoneNumberField:UITextField!
    @IBOutlet weak var notesField: UITextField!
    
    @IBOutlet weak var saveButton: UIBarButtonItem!

    
    /*
     This value is either passed by `MealTableViewController` in `prepare(for:sender:)`
     or constructed as part of adding a new meal.
     */
    
    
    var patient: Patient?
    
    override func viewDidLoad() {
        super.viewDidLoad()
        // Handle the text field’s user input through delegate callbacks.
        nameField.delegate = self
        
        // Set up views if editing an existing Meal.
        if let patient = patient {
            navigationItem.title = patient.name
            nameField.text   = patient.name
            emailField.text = patient.email
            phoneNumberField.text = patient.phoneNumber
            notesField.text = patient.notes
            
        }
        
        // Enable the Save button only if the text field has a valid Meal name.
        updateSaveButtonState()
        
    }
    
    
    
    
    
    
    
    
    //MARK: UITextFieldDelegate section.
    func textFieldDidBeginEditing(_ textField: UITextField) {
        // Disable the Save button while editing.
        saveButton.isEnabled = false
        
    }
    
    
    func textFieldShouldReturn(_ textField: UITextField) -> Bool {
        // Hide the keyboard.
        textField.resignFirstResponder()
        return true
    }
    
    
        func textFieldDidEndEditing(_ textField: UITextField) {
            updateSaveButtonState()
            navigationItem.title = textField.text
        }


        // Do any additional setup after loading the view.

        
    
    
    //    MARK: NAVIGATION
    
    @IBAction func cancel(_ sender: UIBarButtonItem) {
        // Depending on style of presentation (modal or push presentation), this view controller needs to be dismissed in two different ways.
        let isPresentingInAddMealMode = presentingViewController is UINavigationController
        if isPresentingInAddMealMode {
            dismiss(animated: true, completion: nil)
        }
        else if let owningNavigationController = navigationController{
            owningNavigationController.popViewController(animated: true)
        }
        else {
            fatalError("The MealViewController is not inside a navigation controller.")
        }
        dismiss(animated: true, completion: nil)
    }

    
    // This method lets you configure a view controller before it's presented.
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        super.prepare(for: segue, sender: sender)
        // Configure the destination view controller only when the save button is pressed.
        guard let button = sender as? UIBarButtonItem, button === saveButton else {
            os_log("The save button was not pressed, cancelling", log: OSLog.default, type: .debug)
            return
        }
        let name = nameField.text ?? ""
        let email = emailField.text ?? ""
        let notes = notesField.text ?? ""
        let phoneNumber = phoneNumberField.text ?? ""
        
        // Set the meal to be passed to MealTableViewController after the unwind segue.
        patient = Patient(name: name, email: email, phoneNumber: phoneNumber, notes: notes)
    }
    
    
      func prepared(for segue: UIStoryboardSegue, sender: Any?) {

        switch(segue.identifier ?? "") {
            
            
        case "ViewPhotos":
            guard segue.destination is ViewController else {
                fatalError("Unexpected destination: \(segue.destination)")
            }
            
            guard let selectedPhotoButton = sender as? ViewPhotosButton else {
                fatalError("Unexpected sender: \(sender)")
            }
            
            
        default:
            fatalError("Unexpected Segue Identifier; \(segue.identifier)")
        }
    }
    
    
    //MARK: Private Methods
    private func updateSaveButtonState() {
        // Disable the Save button if the text field is empty.
        let text = nameField.text ?? ""
        saveButton.isEnabled = !text.isEmpty
        
    
    }
    
    
    
    }


